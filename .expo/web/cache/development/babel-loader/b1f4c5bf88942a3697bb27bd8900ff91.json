{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\components\\\\MyHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Header, Icon, Badge } from \"react-native-elements\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nvar MyHeader = function (_React$Component) {\n  _inherits(MyHeader, _React$Component);\n\n  var _super = _createSuper(MyHeader);\n\n  function MyHeader(props) {\n    var _this;\n\n    _classCallCheck(this, MyHeader);\n\n    _this = _super.call(this, props);\n\n    _this.getNumberOfUnreadNotifications = function () {\n      db.collection(\"Notifications\").where(\"NotificationStatues\", \"==\", \"unread\").where(\"TargetedUserID\", \"==\", _this.state.userId).onSnapshot(function (snapShot) {\n        var unReadNotifications = snapShot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          value: unReadNotifications.length\n        });\n      });\n    };\n\n    _this.BellIconWithBadge = function () {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        name: \"bell\",\n        type: \"font-awesome\",\n        color: \"black\",\n        size: 25,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Notifications');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), React.createElement(Badge, {\n        value: _this.state.value,\n        containerStyle: {\n          position: 'absolute',\n          top: -4,\n          right: -4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    _this.state = {\n      value: \"\",\n      userId: firebase.auth().currentUser.email\n    };\n    return _this;\n  }\n\n  _createClass(MyHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNumberOfUnreadNotifications();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Header, {\n        leftComponent: React.createElement(Icon, {\n          name: \"bars\",\n          type: \"font-awesome\",\n          color: \"black\",\n          onPress: function onPress() {\n            _this2.props.navigation.toggleDrawer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }),\n        centerComponent: {\n          text: this.props.title,\n          style: {\n            color: \"black\",\n            fontSize: 20,\n            fontWeight: \"bold\"\n          }\n        },\n        rightComponent: React.createElement(this.BellIconWithBadge, _extends({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }\n        })),\n        backgroundColor: \"#6f4e37\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MyHeader;\n}(React.Component);\n\nexport { MyHeader as default };","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/components/MyHeader.js"],"names":["React","Header","Icon","Badge","db","firebase","MyHeader","props","getNumberOfUnreadNotifications","collection","where","state","userId","onSnapshot","snapShot","unReadNotifications","docs","map","doc","data","setState","value","length","BellIconWithBadge","navigation","navigate","position","top","right","auth","currentUser","email","toggleDrawer","text","title","style","color","fontSize","fontWeight","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Header, Icon, Badge } from \"react-native-elements\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class MyHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      userId: firebase.auth().currentUser.email,\r\n    };\r\n  }\r\n\r\n  getNumberOfUnreadNotifications = () => {\r\n    db.collection(\"Notifications\")\r\n      .where(\"NotificationStatues\", \"==\", \"unread\")\r\n      .where(\"TargetedUserID\", \"==\", this.state.userId)\r\n      .onSnapshot((snapShot) => {\r\n        var unReadNotifications = snapShot.docs.map((doc) => doc.data());\r\n        this.setState({\r\n          value: unReadNotifications.length,\r\n        });\r\n      });\r\n  };\r\n\r\n    BellIconWithBadge=()=>{\r\n      return(\r\n        <View>\r\n          <Icon name='bell' type='font-awesome' color='black' size={25}\r\n            onPress={() =>this.props.navigation.navigate('Notifications')}/>\r\n           <Badge\r\n            value={this.state.value}\r\n           containerStyle={{ position: 'absolute', top: -4, right: -4 }}/>\r\n        </View>\r\n      )\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.getNumberOfUnreadNotifications();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Header\r\n        leftComponent={\r\n          <Icon\r\n            name=\"bars\"\r\n            type=\"font-awesome\"\r\n            color=\"black\"\r\n            onPress={() => {\r\n              this.props.navigation.toggleDrawer();\r\n            }}\r\n          />\r\n        }\r\n        centerComponent={{\r\n          text: this.props.title,\r\n          style: { color: \"black\", fontSize: 20, fontWeight: \"bold\" },\r\n        }}\r\n        rightComponent={<this.BellIconWithBadge {...this.props} />}\r\n        backgroundColor=\"#6f4e37\"\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
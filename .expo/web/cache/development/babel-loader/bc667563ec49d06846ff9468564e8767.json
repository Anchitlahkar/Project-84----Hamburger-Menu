{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\Notification.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MyHeader } from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { ListItem } from \"react-native-elements\";\n\nvar NotificationScreen = function (_React$Component) {\n  _inherits(NotificationScreen, _React$Component);\n\n  var _super = _createSuper(NotificationScreen);\n\n  function NotificationScreen() {\n    var _this;\n\n    _classCallCheck(this, NotificationScreen);\n\n    _this = _super.call(this);\n\n    _this.getNotification = function () {\n      _this.notificationRef = db.collection(\"Notifications\").where(\"NotificationStatues\", \"==\", \"unread\").where(\"TargetedUserID\", \"==\", _this.state.userId).onSnapshot(function (snapshot) {\n        var allNotification = [];\n        snapshot.docs.map(function (doc) {\n          var notification = doc.data();\n          allNotification.push(notification);\n        });\n\n        _this.setState({\n          allNotifications: allNotification\n        });\n      });\n    };\n\n    _this.state = {\n      allNotifications: [],\n      userId: firebase.auth().currentUser.email\n    };\n    _this.notificationRef = null;\n    return _this;\n  }\n\n  _createClass(NotificationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNotification();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Notification\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        data: this.state.allNotifications,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              i = _ref.i;\n          return React.createElement(ListItem, {\n            key: i,\n            title: item.itemName,\n            subtitle: item.Message,\n            titleStyle: {\n              color: \"black\",\n              fontWeight: \"bold\"\n            },\n            bottomDivider: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return NotificationScreen;\n}(React.Component);\n\nexport { NotificationScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/Notification.js"],"names":["React","MyHeader","db","firebase","ListItem","NotificationScreen","getNotification","notificationRef","collection","where","state","userId","onSnapshot","snapshot","allNotification","docs","map","doc","notification","data","push","setState","allNotifications","auth","currentUser","email","styles","container","flex","props","navigation","item","index","toString","i","itemName","Message","color","fontWeight","Component","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAQA,SAASC,QAAT;AACA,OAAOC,EAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAEqBC,kB;;;;;AACpB,gCAAc;AAAA;;AAAA;;AACX;;AADW,UASbC,eATa,GASK,YAAM;AACtB,YAAKC,eAAL,GAAuBL,EAAE,CACtBM,UADoB,CACT,eADS,EAEpBC,KAFoB,CAEd,qBAFc,EAES,IAFT,EAEe,QAFf,EAGpBA,KAHoB,CAGd,gBAHc,EAGI,IAHJ,EAGU,MAAKC,KAAL,CAAWC,MAHrB,EAIpBC,UAJoB,CAIT,UAACC,QAAD,EAAc;AACxB,YAAIC,eAAe,GAAG,EAAtB;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAACC,GAAD,EAAS;AACzB,cAAIC,YAAY,GAAGD,GAAG,CAACE,IAAJ,EAAnB;AACAL,UAAAA,eAAe,CAACM,IAAhB,CAAqBF,YAArB;AACD,SAHD;;AAIA,cAAKG,QAAL,CAAc;AACZC,UAAAA,gBAAgB,EAAER;AADN,SAAd;AAGD,OAboB,CAAvB;AAcD,KAxBY;;AAEX,UAAKJ,KAAL,GAAa;AACXY,MAAAA,gBAAgB,EAAE,EADP;AAEXX,MAAAA,MAAM,EAAER,QAAQ,CAACoB,IAAT,GAAgBC,WAAhB,CAA4BC;AAFzB,KAAb;AAIA,UAAKlB,eAAL,GAAuB,IAAvB;AANW;AAOZ;;;;WAmBD,6BAAoB;AAClB,WAAKD,eAAL;AACD;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,cAAhB;AAA+B,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SADhB;AAEE,QAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWY,gBAFnB;AAGE,QAAA,UAAU,EAAE,0BAAiB;AAAA,cAAdS,IAAc,QAAdA,IAAc;AAAA,cAARG,CAAQ,QAARA,CAAQ;AAC3B,iBACE,oBAAC,QAAD;AACE,YAAA,GAAG,EAAEA,CADP;AAEE,YAAA,KAAK,EAAEH,IAAI,CAACI,QAFd;AAGE,YAAA,QAAQ,EAAEJ,IAAI,CAACK,OAHjB;AAIE,YAAA,UAAU,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,UAAU,EAAE;AAA9B,aAJd;AAKE,YAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,SAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAwBD;;;;EAxD6CtC,KAAK,CAACuC,S;;SAAjClC,kB;AA2DrB,IAAMqB,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { MyHeader } from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { ListItem } from \"react-native-elements\";\r\n\r\nexport default class NotificationScreen extends React.Component {\r\n constructor() {\r\n    super();\r\n    this.state = {\r\n      allNotifications: [],\r\n      userId: firebase.auth().currentUser.email,\r\n    };\r\n    this.notificationRef = null;\r\n  }\r\n\r\n  getNotification = () => {\r\n    this.notificationRef = db\r\n      .collection(\"Notifications\")\r\n      .where(\"NotificationStatues\", \"==\", \"unread\")\r\n      .where(\"TargetedUserID\", \"==\", this.state.userId)\r\n      .onSnapshot((snapshot) => {\r\n        var allNotification = [];\r\n        snapshot.docs.map((doc) => {\r\n          var notification = doc.data();\r\n          allNotification.push(notification);\r\n        });\r\n        this.setState({\r\n          allNotifications: allNotification,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getNotification();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={{ flex: 0.1 }}>\r\n          <MyHeader title=\"Notification\" navigation={this.props.navigation}/>\r\n        </View>\r\n        <View>\r\n          <FlatList\r\n            keyExtractor={(item, index) => index.toString()}\r\n            data={this.state.allNotifications}\r\n            renderItem={({ item, i }) => {\r\n              return (\r\n                <ListItem\r\n                  key={i}\r\n                  title={item.itemName}\r\n                  subtitle={item.Message}\r\n                  titleStyle={{ color: \"black\", fontWeight: \"bold\" }}\r\n                  bottomDivider\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
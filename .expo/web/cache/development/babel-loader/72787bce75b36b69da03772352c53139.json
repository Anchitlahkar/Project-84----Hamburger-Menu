{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\MyBarter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { ListItem } from \"react-native-elements\";\n\nvar MyDonationScreen = function (_React$Component) {\n  _inherits(MyDonationScreen, _React$Component);\n\n  var _super = _createSuper(MyDonationScreen);\n\n  function MyDonationScreen() {\n    var _this;\n\n    _classCallCheck(this, MyDonationScreen);\n\n    _this = _super.call(this);\n\n    _this.getDonorDetails = function (ExchengerId) {\n      db.collection(\"Users\").where(\"email\", \"==\", ExchengerId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            donorName: doc.data().name\n          });\n        });\n      });\n    };\n\n    _this.getAllDonations = function () {\n      _this.requestRef = db.collection(\"allExchange\").where(\"ExchengerId\", \"==\", _this.state.ExchengerId).onSnapshot(function (snapshot) {\n        var allExchanges = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          allExchanges: allExchanges\n        });\n      });\n    };\n\n    _this.sendItem = function (ItemDetails) {\n      var requestStatus = \"Book Sent\";\n      db.collection(\"allExchange\").doc(ItemDetails.doc_id).update({\n        requestStatus: requestStatus\n      });\n\n      _this.sendNotification(ItemDetails, requestStatus);\n    };\n\n    _this.sendNotification = function (ItemDetails, requestStatus) {\n      var requestId = ItemDetails.RequestId;\n      var ExchengerId = ItemDetails.DonorId;\n      db.collection(\"Notifications\").where(\"RequestId\", \"==\", requestId).where(\"ExchengerId\", \"==\", ExchengerId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var message = \"\";\n\n          if (requestStatus === \"Book Sent\") {\n            message = _this.state.donorName + \" Sent The Book\";\n          } else {\n            _this.state.donorName + \" has shown intrested in donating the book\";\n          }\n\n          db.collection(\"Notifications\").doc(doc.id).update({\n            Message: message,\n            NotificationStatues: \"unread\",\n            Date: firebase.firestore.FieldValue.serverTimestamp()\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      ExchengerId: firebase.auth().currentUser.email,\n      allExchanges: [],\n      donorName: \"\"\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  _createClass(MyDonationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllDonations();\n      this.getDonorDetails(this.state.ExchengerId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"My Exchange\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        data: this.state.allExchanges,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              i = _ref.i;\n          return React.createElement(ListItem, {\n            key: i,\n            title: item.ItemName,\n            subtitle: \"Requested By: \" + item.requestedBy + \"\\nStatus: \" + item.requestStatus,\n            titleStyle: {\n              color: \"black\",\n              fontWeight: \"bold\"\n            },\n            rightElement: React.createElement(TouchableOpacity, {\n              style: styles.button,\n              onPress: function onPress() {\n                _this2.sendItem(item);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: \"#ffff\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }\n            }, \"Exchange\")),\n            bottomDivider: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MyDonationScreen;\n}(React.Component);\n\nexport { MyDonationScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"green\"\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/MyBarter.js"],"names":["React","MyHeader","db","firebase","ListItem","MyDonationScreen","getDonorDetails","ExchengerId","collection","where","get","then","snapshot","forEach","doc","setState","donorName","data","name","getAllDonations","requestRef","state","onSnapshot","allExchanges","docs","map","sendItem","ItemDetails","requestStatus","doc_id","update","sendNotification","requestId","RequestId","DonorId","message","id","Message","NotificationStatues","Date","firestore","FieldValue","serverTimestamp","auth","currentUser","email","props","navigation","item","index","toString","i","ItemName","requestedBy","color","fontWeight","styles","button","Component","StyleSheet","create","width","height","justifyContent","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { ListItem } from \"react-native-elements\";\r\n\r\nexport default class MyDonationScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      ExchengerId: firebase.auth().currentUser.email,\r\n      allExchanges: [],\r\n      donorName: \"\",\r\n    };\r\n    this.requestRef = null;\r\n  }\r\n\r\n  getDonorDetails = (ExchengerId) => {\r\n    db.collection(\"Users\")\r\n      .where(\"email\", \"==\", ExchengerId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            donorName: doc.data().name,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  getAllDonations = () => {\r\n    this.requestRef = db\r\n      .collection(\"allExchange\")\r\n      .where(\"ExchengerId\", \"==\", this.state.ExchengerId)\r\n      .onSnapshot((snapshot) => {\r\n        var allExchanges = snapshot.docs.map((doc) => doc.data());\r\n        this.setState({\r\n          allExchanges: allExchanges,\r\n        });\r\n      });\r\n  };\r\n\r\n  sendItem = (ItemDetails) => {\r\n    var requestStatus = \"Book Sent\";\r\n\r\n    db.collection(\"allExchange\").doc(ItemDetails.doc_id).update({\r\n      requestStatus: requestStatus,\r\n    });\r\n    this.sendNotification(ItemDetails, requestStatus);\r\n  };\r\n\r\n  sendNotification = (ItemDetails, requestStatus) => {\r\n    var requestId = ItemDetails.RequestId;\r\n    var ExchengerId = ItemDetails.DonorId;\r\n\r\n    db.collection(\"Notifications\")\r\n      .where(\"RequestId\", \"==\", requestId)\r\n      .where(\"ExchengerId\", \"==\", ExchengerId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var message = \"\";\r\n          if (requestStatus === \"Book Sent\") {\r\n            message = this.state.donorName + \" Sent The Book\";\r\n          } else {\r\n            this.state.donorName + \" has shown intrested in donating the book\";\r\n          }\r\n          db.collection(\"Notifications\").doc(doc.id).update({\r\n            Message: message,\r\n            NotificationStatues: \"unread\",\r\n            Date: firebase.firestore.FieldValue.serverTimestamp(),\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllDonations();\r\n    this.getDonorDetails(this.state.ExchengerId);\r\n  }\r\n  render() {\r\n    return (\r\n      <View>\r\n        <MyHeader title=\"My Exchange\" navigation={this.props.navigation}/>\r\n\r\n        <FlatList\r\n          keyExtractor={(item, index) => index.toString()}\r\n          data={this.state.allExchanges}\r\n          renderItem={({ item, i }) => {\r\n            return (\r\n              <ListItem\r\n                key={i}\r\n                title={item.ItemName}\r\n                subtitle={\r\n                  \"Requested By: \" +\r\n                  item.requestedBy +\r\n                  \"\\nStatus: \" +\r\n                  item.requestStatus\r\n                }\r\n                titleStyle={{ color: \"black\", fontWeight: \"bold\" }}\r\n                rightElement={\r\n                  <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => {\r\n                      this.sendItem(item);\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: \"#ffff\" }}>Exchange</Text>\r\n                  </TouchableOpacity>\r\n                }\r\n                bottomDivider\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    width: 100,\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"green\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
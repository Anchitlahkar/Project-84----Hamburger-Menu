{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\ReceiverDetailsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card } from 'react-native-elements';\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar ReceiverDetailsScreen = function (_React$Component) {\n  _inherits(ReceiverDetailsScreen, _React$Component);\n\n  var _super = _createSuper(ReceiverDetailsScreen);\n\n  function ReceiverDetailsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ReceiverDetailsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getReceiverDetails = function () {\n      db.collection('Users').where('email', '==', _this.state.receiverId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n          var name = data.name;\n          console.log(data.contact);\n\n          _this.setState({\n            receiverName: name,\n            receiverContact: data.contact,\n            receiverAddress: data.address\n          });\n        });\n      });\n      db.collection('BookRequest').where('RequestId', '==', _this.state.requestId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            receiverRequestDocId: doc.id\n          });\n        });\n      });\n    };\n\n    _this.updateBookStatus = function () {\n      db.collection('allExchange').add({\n        ItemName: _this.state.itemName,\n        RequestId: _this.state.requestId,\n        requestedBy: _this.state.receiverName,\n        ExchengerId: _this.state.userId,\n        requestStatus: 'Exchenger intrested'\n      });\n    };\n\n    _this.getUserDetails = function (userId) {\n      db.collection('Users').where('email', '==', userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            userName: doc.data().name\n          });\n        });\n      });\n    };\n\n    _this.addNotifications = function () {\n      var message = _this.state.userName + ' ' + 'has shown intrested in donating ' + _this.state.itemName;\n      db.collection('Notifications').add({\n        TargetedUserID: _this.state.receiverId,\n        ExchengerId: _this.state.userId,\n        RequestId: _this.state.requestId,\n        itemName: _this.state.itemName,\n        Date: firebase.firestore.FieldValue.serverTimestamp(),\n        NotificationStatues: 'unread',\n        Message: message\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this.getReceiverDetails();\n\n      _this.getUserDetails(_this.state.userId);\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      receiverId: _this.props.navigation.getParam('details')['UserId'],\n      requestId: _this.props.navigation.getParam('details')['RequestId'],\n      itemName: _this.props.navigation.getParam('details')['ItemName'],\n      reason: _this.props.navigation.getParam('details')['Reason'],\n      receiverName: '',\n      receiverContact: '',\n      receiverAddress: '',\n      receiverRequestDocId: '',\n      userName: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReceiverDetailsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, React.createElement(Card, {\n        title: 'Book Information',\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"Name: \", this.state.itemName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, \"Reason: \", this.state.reason)))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, React.createElement(Card, {\n        title: 'Receiver Information',\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, \"Name: \", this.state.receiverName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, \"Contact: \", this.state.receiverContact)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, \"Address: \", this.state.receiverAddress)))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, this.state.receiverId !== this.state.userId ? React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.updateBookStatus();\n\n          _this2.addNotifications();\n\n          _this2.props.navigation.navigate('MyBarter');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontWeight: 'Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, \"I Want To Exchange\", ' ')) : null));\n    }\n  }]);\n\n  return ReceiverDetailsScreen;\n}(React.Component);\n\nexport { ReceiverDetailsScreen as default };\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    flex: 0.3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    width: 200,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: 'blue',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/ReceiverDetailsScreen.js"],"names":["React","Card","db","firebase","ReceiverDetailsScreen","props","getReceiverDetails","collection","where","state","receiverId","get","then","snapshot","forEach","doc","data","name","console","log","contact","setState","receiverName","receiverContact","receiverAddress","address","requestId","receiverRequestDocId","id","updateBookStatus","add","ItemName","itemName","RequestId","requestedBy","ExchengerId","userId","requestStatus","getUserDetails","userName","addNotifications","message","TargetedUserID","Date","firestore","FieldValue","serverTimestamp","NotificationStatues","Message","componentDidMount","auth","currentUser","email","navigation","getParam","reason","fontSize","fontWeight","styles","buttonContainer","button","navigate","color","Component","StyleSheet","create","flex","justifyContent","alignItems","width","height","borderRadius","backgroundColor","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  FlatList,\r\n} from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\n\r\nexport default class ReceiverDetailsScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userId: firebase.auth().currentUser.email,\r\n      receiverId: this.props.navigation.getParam('details')['UserId'],\r\n      requestId: this.props.navigation.getParam('details')['RequestId'],\r\n      itemName: this.props.navigation.getParam('details')['ItemName'],\r\n      reason: this.props.navigation.getParam('details')['Reason'],\r\n      receiverName: '',\r\n      receiverContact: '',\r\n      receiverAddress: '',\r\n      receiverRequestDocId: '',\r\n      userName: '',\r\n    };\r\n  }\r\n\r\n  getReceiverDetails = () => {\r\n    db.collection('Users')\r\n      .where('email', '==', this.state.receiverId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var data = doc.data();\r\n          var name = data.name;\r\n\r\n          console.log(data.contact);\r\n\r\n          this.setState({\r\n            receiverName: name,\r\n            receiverContact: data.contact,\r\n            receiverAddress: data.address,\r\n          });\r\n        });\r\n      });\r\n\r\n    db.collection('BookRequest')\r\n      .where('RequestId', '==', this.state.requestId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            receiverRequestDocId: doc.id,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  updateBookStatus = () => {\r\n    db.collection('allExchange').add({\r\n      ItemName: this.state.itemName,\r\n      RequestId: this.state.requestId,\r\n      requestedBy: this.state.receiverName,\r\n      ExchengerId: this.state.userId,\r\n      requestStatus: 'Exchenger intrested',\r\n    });\r\n  };\r\n\r\n  getUserDetails = (userId) => {\r\n    db.collection('Users')\r\n      .where('email', '==', userId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            userName: doc.data().name,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  addNotifications = () => {\r\n    var message =\r\n      this.state.userName +\r\n      ' ' +\r\n      'has shown intrested in donating ' +\r\n      this.state.itemName;\r\n\r\n    db.collection('Notifications').add({\r\n      TargetedUserID: this.state.receiverId,\r\n      ExchengerId: this.state.userId,\r\n      RequestId: this.state.requestId,\r\n      itemName: this.state.itemName,\r\n      Date: firebase.firestore.FieldValue.serverTimestamp(),\r\n      NotificationStatues: 'unread',\r\n      Message: message,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getReceiverDetails();\r\n    this.getUserDetails(this.state.userId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View>\r\n          <Card title={'Book Information'} titleStyle={{ fontSize: 20 }}>\r\n            <Card>\r\n              <Text style={{ fontWeight: 'bold' }}>\r\n                Name: {this.state.itemName}\r\n              </Text>\r\n            </Card>\r\n            <Card>\r\n              <Text style={{ fontWeight: 'bold' }}>\r\n                Reason: {this.state.reason}\r\n              </Text>\r\n            </Card>\r\n          </Card>\r\n        </View>\r\n        <View>\r\n          <Card title={'Receiver Information'} titleStyle={{ fontSize: 20 }}>\r\n            <Card>\r\n              <Text style={{ fontWeight: 'bold' }}>\r\n                Name: {this.state.receiverName}\r\n              </Text>\r\n            </Card>\r\n            <Card>\r\n              <Text style={{ fontWeight: 'bold' }}>\r\n                Contact: {this.state.receiverContact}\r\n              </Text>\r\n            </Card>\r\n            <Card>\r\n              <Text style={{ fontWeight: 'bold' }}>\r\n                Address: {this.state.receiverAddress}\r\n              </Text>\r\n            </Card>\r\n          </Card>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          {this.state.receiverId !== this.state.userId ? (\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => {\r\n                this.updateBookStatus();\r\n                this.addNotifications();\r\n                this.props.navigation.navigate('MyBarter');\r\n              }}>\r\n              <Text style={{ color: 'white', fontWeight: 'Bold' }}>\r\n                I Want To Exchange{' '}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    flex: 0.3,\r\n    justifyContent: 'center',\r\n\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    width: 200,\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    backgroundColor: 'blue',\r\n    margin: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\WelcomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport db from \"../config\";\n\nvar SearchScreen = function (_React$Component) {\n  _inherits(SearchScreen, _React$Component);\n\n  var _super = _createSuper(SearchScreen);\n\n  function SearchScreen() {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _super.call(this);\n\n    _this.userLogin = function (email, password) {\n      console.log('Login:  ' + email + ' : ' + password);\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        _this.props.navigation.navigate('Homescreen');\n      }).catch(function (error) {\n        console.log(error);\n        var errorMessage = error.message;\n        return alert(errorMessage);\n      });\n    };\n\n    _this.userSignUp = function (email, password, confirmPassword) {\n      console.log('SignUp:  ' + email + ' : ' + password);\n\n      if (password !== confirmPassword) {\n        return alert('Check Your Password');\n      } else {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n          db.collection('Users').add({\n            name: _this.state.firstName + ' ' + _this.state.lastName,\n            contact: _this.state.contact,\n            address: _this.state.address,\n            email: _this.state.email\n          });\n          return alert('User Add Successfully');\n        }).catch(function (error) {\n          console.log(error);\n          var errorMessage = error.message;\n          return alert(errorMessage);\n        });\n      }\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.KeyboardAvoidingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, \"Registration\"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'First Name',\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            firstName: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Last Name',\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            lastName: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Contact',\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            contact: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Address',\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            address: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Email',\n        keyboardType: 'email-address',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: 'Confrim Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            confirmPassword: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          return _this.userSignUp(_this.state.email, _this.state.password, _this.state.confirmPassword);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }, \"Register\"))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.cancelButton,\n        onPress: function onPress() {\n          return _this.setState({\n            isModalVisible: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#ff5722'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }, \"Cancel\")))))));\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      contact: '',\n      confirmPassword: '',\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.mainView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, \"Barter System\")), React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../assets/download.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }), this.showModal(), React.createElement(TextInput, {\n        style: [styles.textInputStyle, {\n          marginTop: '10%'\n        }],\n        placeholder: \"    Email ID\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        placeholder: \"    Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.ButtonStyle,\n        onPress: function onPress() {\n          _this2.userLogin(_this2.state.email, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.ButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, \"Login\")), React.createElement(TouchableOpacity, {\n        style: styles.ButtonStyle,\n        onPress: function onPress() {\n          _this2.setState({\n            isModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.ButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return SearchScreen;\n}(React.Component);\n\nexport { SearchScreen as default };\nvar styles = StyleSheet.create({\n  mainView: {\n    height: '100%',\n    alignItems: 'center',\n    backgroundColor: 'smokeWhite',\n    width: '100%'\n  },\n  textInputStyle: {\n    margin: 10,\n    borderRadius: 15,\n    height: 35,\n    width: '80%',\n    borderBottomWidth: 5,\n    backgroundColor: 'lightgrey'\n  },\n  textContainer: {\n    backgroundColor: '#464840',\n    width: '100%'\n  },\n  text: {\n    color: 'white',\n    padding: 20,\n    fontSize: 22,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  ButtonStyle: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 10,\n    margin: 10,\n    width: 100,\n    height: 35,\n    marginLeft: 10\n  },\n  ButtonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  modalContainer: {\n    flex: 1,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffff',\n    marginRight: 30,\n    marginLeft: 30,\n    marginTop: 80,\n    marginBottom: 80\n  },\n  KeyboardAvoidingView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalTitle: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    fontSize: 30,\n    color: 'brown',\n    margin: 50\n  },\n  formTextInput: {\n    width: '75%',\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  registerButton: {\n    width: 200,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginTop: 30\n  },\n  registerButtonText: {\n    color: '#ff5722',\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    width: 200,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/WelcomeScreen.js"],"names":["React","firebase","ScrollView","db","SearchScreen","userLogin","email","password","console","log","auth","signInWithEmailAndPassword","then","props","navigation","navigate","catch","error","errorMessage","message","alert","userSignUp","confirmPassword","createUserWithEmailAndPassword","collection","add","name","state","firstName","lastName","contact","address","showModal","isModalVisible","styles","modalContainer","width","KeyboardAvoidingView","modalTitle","formTextInput","text","setState","registerButton","registerButtonText","cancelButton","color","mainView","textContainer","logo","require","textInputStyle","marginTop","ButtonStyle","ButtonText","Component","StyleSheet","create","height","alignItems","backgroundColor","margin","borderRadius","borderBottomWidth","padding","fontSize","fontWeight","textAlign","marginLeft","flex","justifyContent","marginRight","marginBottom","alignSelf","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  Modal,\r\n  KeyboardAvoidingView,\r\n  Alert,\r\n} from 'react-native';\r\nimport firebase from 'firebase';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport db from '../config';\r\n\r\nexport default class SearchScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      contact: '',\r\n      confirmPassword: '',\r\n      isModalVisible: false,\r\n    };\r\n  }\r\n\r\n  userLogin = (email, password) => {\r\n    console.log('Login:  ' + email + ' : ' + password);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.props.navigation.navigate('Homescreen')\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        var errorMessage = error.message;\r\n        return alert(errorMessage);\r\n      });\r\n  };\r\n\r\n  userSignUp = (email, password, confirmPassword) => {\r\n    console.log('SignUp:  ' + email + ' : ' + password);\r\n\r\n    if (password !== confirmPassword) {\r\n      return alert('Check Your Password');\r\n    } else {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          db.collection('Users').add({\r\n            name: this.state.firstName + ' '+ this.state.lastName,\r\n            contact: this.state.contact,\r\n            address: this.state.address,\r\n            email: this.state.email,\r\n          });\r\n          return alert('User Add Successfully')\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          var errorMessage = error.message;\r\n          return alert(errorMessage);\r\n        });\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    return (\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={this.state.isModalVisible}>\r\n        <View style={styles.modalContainer}>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            <KeyboardAvoidingView style={styles.KeyboardAvoidingView}>\r\n              <Text style={styles.modalTitle}>Registration</Text>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'First Name'}\r\n                maxLength={8}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    firstName: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Last Name'}\r\n                maxLength={8}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    lastName: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Contact'}\r\n                maxLength={10}\r\n                keyboardType={'numeric'}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    contact: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Address'}\r\n                multiline={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    address: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Email'}\r\n                keyboardType={'email-address'}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    email: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Password'}\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    password: text,\r\n                  });\r\n                }}\r\n              />\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={'Confrim Password'}\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    confirmPassword: text,\r\n                  });\r\n                }}\r\n              />\r\n              <View>\r\n                <TouchableOpacity\r\n                  style={styles.registerButton}\r\n                  onPress={() =>\r\n                    this.userSignUp(\r\n                      this.state.email,\r\n                      this.state.password,\r\n                      this.state.confirmPassword\r\n                    )\r\n                  }>\r\n                  <Text style={styles.registerButtonText}>Register</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View>\r\n                <TouchableOpacity\r\n                  style={styles.cancelButton}\r\n                  onPress={() => this.setState({ isModalVisible: false })}>\r\n                  <Text style={{ color: '#ff5722' }}>Cancel</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </KeyboardAvoidingView>\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.mainView}>\r\n        <View style={styles.textContainer}>\r\n          <Text style={styles.text}>Barter System</Text>\r\n        </View>\r\n\r\n        <Image\r\n          style={styles.logo}\r\n          source={require('../assets/download.jpg')}\r\n        />\r\n        {this.showModal()}\r\n\r\n        <TextInput\r\n          style={[styles.textInputStyle, { marginTop: '10%' }]}\r\n          placeholder=\"    Email ID\"\r\n          keyboardType=\"email-address\"\r\n          onChangeText={(text) => {\r\n            this.setState({\r\n              email: text,\r\n            });\r\n          }}\r\n        />\r\n        <TextInput\r\n          style={styles.textInputStyle}\r\n          placeholder=\"    Password\"\r\n          secureTextEntry={true}\r\n          onChangeText={(text) => {\r\n            this.setState({\r\n              password: text,\r\n            });\r\n          }}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={styles.ButtonStyle}\r\n          onPress={() => {\r\n            this.userLogin(this.state.email, this.state.password);\r\n          }}>\r\n          <Text style={styles.ButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.ButtonStyle}\r\n          onPress={() => {\r\n            // this.showModal();\r\n            this.setState({\r\n              isModalVisible: true,\r\n            });\r\n          }}>\r\n          <Text style={styles.ButtonText}>Sign Up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainView: {\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    backgroundColor: 'smokeWhite',\r\n    width: '100%',\r\n  },\r\n  textInputStyle: {\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    height: 35,\r\n    width: '80%',\r\n    borderBottomWidth: 5,\r\n    backgroundColor: 'lightgrey',\r\n  },\r\n  textContainer: {\r\n    backgroundColor: '#464840',\r\n    width: '100%',\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    padding: 20,\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  ButtonStyle: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    margin: 10,\r\n    width: 100,\r\n    height: 35,\r\n    marginLeft: 10,\r\n  },\r\n  ButtonText: {\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    borderRadius: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffff',\r\n    marginRight: 30,\r\n    marginLeft: 30,\r\n    marginTop: 80,\r\n    marginBottom: 80,\r\n  },\r\n  KeyboardAvoidingView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalTitle: {\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    fontSize: 30,\r\n    color: 'brown',\r\n    margin: 50,\r\n  },\r\n\r\n  formTextInput: {\r\n    width: '75%',\r\n    height: 35,\r\n    alignSelf: 'center',\r\n    borderColor: '#ffab91',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    marginTop: 20,\r\n    padding: 10,\r\n  },\r\n  registerButton: {\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginTop: 30,\r\n  },\r\n  registerButtonText: {\r\n    color: '#ff5722',\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  cancelButton: {\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
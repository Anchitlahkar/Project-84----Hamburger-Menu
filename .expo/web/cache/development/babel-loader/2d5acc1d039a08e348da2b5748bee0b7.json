{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\ExchangeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { MyHeader } from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar ExchangeItemScreenScreen = function (_React$Component) {\n  _inherits(ExchangeItemScreenScreen, _React$Component);\n\n  var _super = _createSuper(ExchangeItemScreenScreen);\n\n  function ExchangeItemScreenScreen() {\n    var _this;\n\n    _classCallCheck(this, ExchangeItemScreenScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function (itemName, reason) {\n      var userId = _this.state.userId;\n\n      var randomRequestId = _this.createUniqueId();\n\n      if (itemName !== '') {\n        if (reason !== '') {\n          db.collection('Exchange').add({\n            UserId: userId,\n            RequestId: randomRequestId,\n            ItemName: itemName,\n            Reason: reason\n          });\n\n          _this.setState({\n            itemName: '',\n            reasonRequest: ''\n          });\n\n          alert('Book Requested Successfully');\n        } else {\n          alert('Please Write Your Reason');\n        }\n      } else {\n        alert('Please Write Your Book Name');\n      }\n    };\n\n    _this.state = {\n      itemName: '',\n      reasonRequest: '',\n      userId: firebase.auth().currentUser.email\n    };\n    return _this;\n  }\n\n  _createClass(ExchangeItemScreenScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.keyboardAvoidingViewStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        placeholder: \"Enter Item\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            itemName: text\n          });\n        },\n        value: this.state.itemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: [styles.textInputStyle, {\n          height: 300\n        }],\n        placeholder: \"Description\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            reasonRequest: text\n          });\n        },\n        value: this.state.reasonRequest,\n        multiline: true,\n        numberOfLines: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.requestStyle,\n        onPress: function onPress() {\n          _this2.addRequest(_this2.state.itemName, _this2.state.reasonRequest);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, \"Add Item\"))));\n    }\n  }]);\n\n  return ExchangeItemScreenScreen;\n}(React.Component);\n\nexport { ExchangeItemScreenScreen as default };\nvar styles = StyleSheet.create({\n  keyboardAvoidingViewStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInputStyle: {\n    width: '75%',\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 30,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  requestStyle: {\n    width: '50%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    backgroundColor: 'gold',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 60\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/ExchangeScreen.js"],"names":["React","MyHeader","db","firebase","ExchangeItemScreenScreen","addRequest","itemName","reason","userId","state","randomRequestId","createUniqueId","collection","add","UserId","RequestId","ItemName","Reason","setState","reasonRequest","alert","auth","currentUser","email","Math","random","toString","substring","styles","keyboardAvoidingViewStyle","textInputStyle","text","height","requestStyle","fontWeight","fontSize","Component","StyleSheet","create","flex","alignItems","justifyContent","width","alignSelf","borderColor","borderRadius","borderWidth","marginTop","padding","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n} from 'react-native';\r\n\r\nimport { MyHeader } from '../components/MyHeader';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\n\r\nexport default class ExchangeItemScreenScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      itemName: '',\r\n      reasonRequest: '',\r\n      userId: firebase.auth().currentUser.email,\r\n    };\r\n  }\r\n\r\n  createUniqueId() {\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n  addRequest = (itemName, reason) => {\r\n    var userId = this.state.userId;\r\n    var randomRequestId = this.createUniqueId();\r\n\r\n    if (itemName !== '') {\r\n      if (reason !== '') {\r\n        db.collection('Exchange').add({\r\n          UserId: userId,\r\n          RequestId: randomRequestId,\r\n          ItemName: itemName,\r\n          Reason: reason,\r\n        });\r\n\r\n        this.setState({\r\n          itemName: '',\r\n          reasonRequest: '',\r\n        });\r\n        alert('Book Requested Successfully');\r\n      } else {\r\n        alert('Please Write Your Reason');\r\n      }\r\n    } else {\r\n      alert('Please Write Your Book Name');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <KeyboardAvoidingView style={styles.keyboardAvoidingViewStyle}>\r\n          <TextInput\r\n            style={styles.textInputStyle}\r\n            placeholder=\"Enter Item\"\r\n            onChangeText={(text) => {\r\n              this.setState({ itemName: text });\r\n            }}\r\n            value={this.state.itemName}\r\n          />\r\n\r\n          <TextInput\r\n            style={[styles.textInputStyle, { height: 300 }]}\r\n            placeholder=\"Description\"\r\n            onChangeText={(text) => {\r\n              this.setState({ reasonRequest: text });\r\n            }}\r\n            value={this.state.reasonRequest}\r\n            multiline={true}\r\n            numberOfLines={10}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            style={styles.requestStyle}\r\n            onPress={() => {\r\n              this.addRequest(this.state.itemName, this.state.reasonRequest);\r\n            }}>\r\n            <Text style={{ fontWeight: 'bold', fontSize: 20 }}>Add Item</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  keyboardAvoidingViewStyle: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  textInputStyle: {\r\n    width: '75%',\r\n    height: 35,\r\n    alignSelf: 'center',\r\n    borderColor: '#ffab91',\r\n    borderRadius: 30,\r\n    borderWidth: 1,\r\n    marginTop: 20,\r\n    padding: 10,\r\n  },\r\n  requestStyle: {\r\n    width: '50%',\r\n    height: 40,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    backgroundColor: 'gold',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 8 },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop: 60,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
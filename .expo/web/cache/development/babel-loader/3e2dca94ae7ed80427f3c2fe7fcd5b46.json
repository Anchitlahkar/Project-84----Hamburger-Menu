{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Project-83----Notification\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport { ListItem } from 'react-native-elements';\n\nvar DonateBookScreen = function (_React$Component) {\n  _inherits(DonateBookScreen, _React$Component);\n\n  var _super = _createSuper(DonateBookScreen);\n\n  function DonateBookScreen() {\n    var _this;\n\n    _classCallCheck(this, DonateBookScreen);\n\n    _this = _super.call(this);\n\n    _this.getRequestedBookList = function () {\n      _this.requestRef = db.collection('BookRequest').onSnapshot(function (snapshot) {\n        var requestedBookList = snapshot.docs.map(function (document) {\n          return document.data();\n        });\n\n        _this.setState({\n          requestedBookList: requestedBookList\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this.getRequestedBookList();\n    };\n\n    _this.state = {\n      requestedItemList: ''\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  _createClass(DonateBookScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Exchange Item\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        data: this.state.requestedItemList,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              i = _ref.i;\n          return React.createElement(ListItem, {\n            key: i,\n            title: item.ItemName,\n            subtitle: item.Reason,\n            titleStyle: {\n              color: 'black',\n              fontWeight: 'bold'\n            },\n            rightElement: React.createElement(TouchableOpacity, {\n              style: styles.button,\n              onPress: function onPress() {\n                _this2.props.navigation.navigate('ReceiverDetails', {\n                  details: item\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: '#ffff'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }\n            }, \"Exchange\")),\n            bottomDivider: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DonateBookScreen;\n}(React.Component);\n\nexport { DonateBookScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["D:/Apps/Project-83----Notification/screens/HomeScreen.js"],"names":["React","MyHeader","db","ListItem","DonateBookScreen","getRequestedBookList","requestRef","collection","onSnapshot","snapshot","requestedBookList","docs","map","document","data","setState","componentDidMount","state","requestedItemList","props","navigation","item","index","toString","i","ItemName","Reason","color","fontWeight","styles","button","navigate","details","Component","StyleSheet","create","width","height","justifyContent","alignItems","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AASA,OAAQC,QAAR;AACA,OAAOC,EAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAEqBC,gB;;;;;AACnB,8BAAc;AAAA;;AAAA;;AACZ;;AADY,UASdC,oBATc,GASS,YAAM;AAC3B,YAAKC,UAAL,GAAkBJ,EAAE,CAACK,UAAH,CAAc,aAAd,EAA6BC,UAA7B,CAAwC,UAACC,QAAD,EAAc;AACtE,YAAIC,iBAAiB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAACC,QAAD;AAAA,iBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,SAAlB,CAAxB;;AACA,cAAKC,QAAL,CAAc;AACZL,UAAAA,iBAAiB,EAAEA;AADP,SAAd;AAGD,OALiB,CAAlB;AAMD,KAhBa;;AAAA,UAkBdM,iBAlBc,GAkBM,YAAM;AACxB,YAAKX,oBAAL;AACD,KApBa;;AAGZ,UAAKY,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAGA,UAAKZ,UAAL,GAAkB,IAAlB;AANY;AAOb;;;;WAeD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,eAAhB;AAAgC,QAAA,UAAU,EAAE,KAAKa,KAAL,CAAWC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SADhB;AAEE,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,iBAFnB;AAGE,QAAA,UAAU,EAAE,0BAAiB;AAAA,cAAdG,IAAc,QAAdA,IAAc;AAAA,cAARG,CAAQ,QAARA,CAAQ;AAC3B,iBACE,oBAAC,QAAD;AACE,YAAA,GAAG,EAAEA,CADP;AAEE,YAAA,KAAK,EAAEH,IAAI,CAACI,QAFd;AAGE,YAAA,QAAQ,EAAEJ,IAAI,CAACK,MAHjB;AAIE,YAAA,UAAU,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,UAAU,EAAE;AAA9B,aAJd;AAKE,YAAA,YAAY,EACV,oBAAC,gBAAD;AACE,cAAA,KAAK,EAAEC,MAAM,CAACC,MADhB;AAEE,cAAA,OAAO,EAAE,mBAAM;AACb,gBAAA,MAAI,CAACX,KAAL,CAAWC,UAAX,CAAsBW,QAAtB,CAA+B,iBAA/B,EAAkD;AAChDC,kBAAAA,OAAO,EAAEX;AADuC,iBAAlD;AAGD,eANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEM,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CANJ;AAgBE,YAAA,aAAa,MAhBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,SAxBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAgCD;;;;EAxD2C3B,KAAK,CAACiC,S;;SAA/B7B,gB;AA0DrB,IAAMyB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,eAAe,EAAE;AALX;AADuB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from 'react-native';\r\nimport  MyHeader  from '../components/MyHeader';\r\nimport db from '../config';\r\nimport { ListItem } from 'react-native-elements';\r\n\r\nexport default class DonateBookScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestedItemList: '',\r\n    };\r\n    this.requestRef = null;\r\n  }\r\n\r\n  getRequestedBookList = () => {\r\n    this.requestRef = db.collection('BookRequest').onSnapshot((snapshot) => {\r\n      var requestedBookList = snapshot.docs.map((document) => document.data());\r\n      this.setState({\r\n        requestedBookList: requestedBookList,\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getRequestedBookList();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <MyHeader title=\"Exchange Item\" navigation={this.props.navigation}/>\r\n\r\n        <FlatList\r\n          keyExtractor={(item, index) => index.toString()}\r\n          data={this.state.requestedItemList}\r\n          renderItem={({ item, i }) => {\r\n            return (\r\n              <ListItem\r\n                key={i}\r\n                title={item.ItemName}\r\n                subtitle={item.Reason}\r\n                titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n                rightElement={\r\n                  <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => {\r\n                      this.props.navigation.navigate('ReceiverDetails', {\r\n                        details: item,\r\n                      });\r\n                    }}>\r\n                    <Text style={{ color: '#ffff' }}>Exchange</Text>\r\n                  </TouchableOpacity>\r\n                }\r\n                bottomDivider\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    width: 100,\r\n    height: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'green',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}